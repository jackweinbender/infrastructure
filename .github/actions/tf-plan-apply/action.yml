name: "Terraform Plan & Apply"
description: "Terraform plan and apply for a Component / Subdirectory"

inputs:
  component:
    description: "Component / Subdirectory Name"
    required: true
  apply:
    description: "Apply the plan as a part of this action?"
    default: "false"
  skip_fmt:
    description: "Skip terraform fmt?"
    default: "false"
  skip_validate:
    description: "Skip terraform validate?"
    default: "false"
  op_token:
    description: "One Password Token"

runs:
  using: composite
  steps:
    - name: Load secret
      uses: 1password/load-secrets-action@v2
      with:
        export-env: true
      # We, rather obnoxiously, have to export all OP variables for all
      # runs here, cuz we can't run `op inject` like we do locally
      env:
        OP_SERVICE_ACCOUNT_TOKEN: ${{ inputs.op_token }}
        TF_VAR_tailscale_auth_key: "op://network/TailscaleAWSUserdata/credential"
        TF_VAR_tailscale_api_key: "op://network/jug5ho4woduhynu3pilr33kpji/credential"
        TF_VAR_virtual_environment_endpoint: "op://network/tnyuufxc75mep7hfhymhqrv6c4/url"
        TF_VAR_virtual_environment_password: "op://network/tnyuufxc75mep7hfhymhqrv6c4/password"
        TF_VAR_virtual_environment_username: "op://network/tnyuufxc75mep7hfhymhqrv6c4/username@pam"
    - uses: hashicorp/setup-terraform@v2
    # We always run init.
    - name: Terraform init
      id: init
      shell: bash
      run: terraform -chdir=terraform/${{ inputs.component }} init

    #  Skippables. Usually we should run them, though.
    - name: Terraform fmt
      if: ${{ inputs.skip_fmt != 'true' }}
      id: fmt
      shell: bash
      run: terraform -chdir=terraform/${{ inputs.component }} fmt -check
    - name: Terraform validate
      if: ${{ inputs.skip_validate != 'true' }}
      id: validate
      shell: bash
      run: terraform -chdir=terraform/${{ inputs.component }} validate

    # We always run plan.
    - name: Terraform plan
      id: plan
      shell: bash
      run: terraform -chdir=terraform/${{ inputs.component }} plan

    # DANGER: Only apply when explicitly instructed.
    - name: Terraform apply
      if: ${{ inputs.apply == 'true' }}
      id: apply
      shell: bash
      run: terraform -chdir=terraform/${{ inputs.component }} apply -auto-approve
